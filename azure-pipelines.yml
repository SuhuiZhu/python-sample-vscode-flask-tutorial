jobs:
- job: 'Test'
  pool:
    vmImage: 'ubuntu-latest' # other options: 'macOS-latest', 'windows-latest'
  strategy:
    matrix:
      # Python27:
      #   python.version: '2.7'
      Python38:
        python.version: '3.8'
      # Python36:
      #   python.version: '3.6'

  steps:
  # - task: UsePythonVersion@0
  #   inputs:
  #     versionSpec: '$(python.version)'
  - task: PythonScript@0
    inputs:
      scriptSource: 'inline'
      script: |
        print('Hello world 1')
        print('Hello world 2')
  # - task: PythonScript@0
  #   inputs:
  #     scriptSource: inline
  #     script: |
  #       import sys
  #       print ('Executing script file is:', str(sys.argv[0]))
  #       print ('The arguments are:', str(sys.argv))
  #       import argparse
  #       parser = argparse.ArgumentParser()
  #       parser.add_argument("--world", help="Provide the name of the world to greet.")
  #       args = parser.parse_args()
  #       print ('Hello ', args.world)
  #     arguments: --world Venus
  - script: pip install -r requirements.txt
    displayName: 'Install requirements'

  - script: |
      pip install pytest pytest-azurepipelines
      pip install pytest-cov
      pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml
    displayName: 'pytest'
  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
  # - task: TwineAuthenticate@0
  #   inputs:
  #     artifactFeed: '<Azure Artifacts feed name>'
  #     pythonUploadServiceConnection: '<twine service connection from external organization>'
  
  # - script: |
  #  twine upload -r "<feed or service connection name>" --config-file $(PYPIRC_PATH) <package path/files>